`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date:    00:00:00 10/17/2025 
// Module Name:    Code 
// Description:    16x1 Multiplexer
//////////////////////////////////////////////////////////////////////////////////
module Code(
    input D0, input D1, input D2, input D3,
    input D4, input D5, input D6, input D7,
    input D8, input D9, input D10, input D11,
    input D12, input D13, input D14, input D15,
    input S0, input S1, input S2, input S3,   // S3 = MSB, S0 = LSB
    output Y
    );

    // Select-and-gate each data input, then OR them together
    assign Y = (D0  & ~S3 & ~S2 & ~S1 & ~S0) |
               (D1  & ~S3 & ~S2 & ~S1 &  S0) |
               (D2  & ~S3 & ~S2 &  S1 & ~S0) |
               (D3  & ~S3 & ~S2 &  S1 &  S0) |
               (D4  & ~S3 &  S2 & ~S1 & ~S0) |
               (D5  & ~S3 &  S2 & ~S1 &  S0) |
               (D6  & ~S3 &  S2 &  S1 & ~S0) |
               (D7  & ~S3 &  S2 &  S1 &  S0) |
               (D8  &  S3 & ~S2 & ~S1 & ~S0) |
               (D9  &  S3 & ~S2 & ~S1 &  S0) |
               (D10 &  S3 & ~S2 &  S1 & ~S0) |
               (D11 &  S3 & ~S2 &  S1 &  S0) |
               (D12 &  S3 &  S2 & ~S1 & ~S0) |
               (D13 &  S3 &  S2 & ~S1 &  S0) |
               (D14 &  S3 &  S2 &  S1 & ~S0) |
               (D15 &  S3 &  S2 &  S1 &  S0);

endmodule
