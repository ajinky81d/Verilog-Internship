`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Testbench for 16x1 MUX (Code)
//////////////////////////////////////////////////////////////////////////////////
module CodeTB;

    // Inputs
    reg D0; reg D1; reg D2; reg D3;
    reg D4; reg D5; reg D6; reg D7;
    reg D8; reg D9; reg D10; reg D11;
    reg D12; reg D13; reg D14; reg D15;
    reg S0; reg S1; reg S2; reg S3;

    // Output
    wire Y;

    // Instantiate UUT
    Code uut (
        .D0(D0),   .D1(D1),   .D2(D2),   .D3(D3),
        .D4(D4),   .D5(D5),   .D6(D6),   .D7(D7),
        .D8(D8),   .D9(D9),   .D10(D10), .D11(D11),
        .D12(D12), .D13(D13), .D14(D14), .D15(D15),
        .S0(S0), .S1(S1), .S2(S2), .S3(S3),
        .Y(Y)
    );

    initial begin
        // Initialize all inputs
        D0 = 0; D1 = 0; D2 = 0; D3 = 0;
        D4 = 0; D5 = 0; D6 = 0; D7 = 0;
        D8 = 0; D9 = 0; D10 = 0; D11 = 0;
        D12 = 0; D13 = 0; D14 = 0; D15 = 0;
        S0 = 0; S1 = 0; S2 = 0; S3 = 0;

        // Wait for global reset
        #100;

        // Give data inputs a known pattern (alternating 1/0)
        D0 = 1; D1 = 0; D2 = 1; D3 = 0;
        D4 = 1; D5 = 0; D6 = 1; D7 = 0;
        D8 = 1; D9 = 0; D10 = 1; D11 = 0;
        D12 = 1; D13 = 0; D14 = 1; D15 = 0;

        // Header for printout
        $display("Time\tS3 S2 S1 S0\tY");
        $display("-------------------------------");

        // Loop through all 16 select combinations and print Y
        repeat (16) begin
            #10;
            $display("%0dns\t%b  %b  %b  %b\t%b", $time, S3, S2, S1, S0, Y);
            {S3, S2, S1, S0} = {S3, S2, S1, S0} + 1;
        end

        #10 $stop;
    end

endmodule
